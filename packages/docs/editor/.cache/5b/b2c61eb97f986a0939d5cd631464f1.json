{"id":"y4su","dependencies":[{"name":"/Users/krystian/Projects/OpenSource/neft/packages/docs/editor/package.json","includedInParent":true,"mtime":1560887740812},{"name":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/compiler-document/package.json","includedInParent":true,"mtime":1560870718509},{"name":"@neft/core","loc":{"line":1,"column":37},"parent":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/compiler-document/parse/unknowns.js","resolved":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/core/index.js"}],"generated":{"js":"const{Element:{Tag:e}}=require(\"@neft/core\");module.exports=((n,r)=>{const o=n=>{n instanceof e&&(n.name.startsWith(\"n-\")&&n.visible&&r.error(new Error(`Unknown tag ${n.name}`)),n.children.forEach(o))};o(n)});"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":15}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":23}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":1,"column":0},"generated":{"line":1,"column":31}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":3,"column":0},"generated":{"line":1,"column":45}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":3,"column":0},"generated":{"line":1,"column":52}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":3,"column":0},"generated":{"line":1,"column":60}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":3,"column":0},"generated":{"line":1,"column":62}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":3,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":4,"column":0},"generated":{"line":1,"column":69}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":4,"column":0},"generated":{"line":1,"column":75}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":4,"column":0},"generated":{"line":1,"column":77}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":5,"column":0},"generated":{"line":1,"column":81}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":5,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":6,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":6,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":6,"column":0},"generated":{"line":1,"column":105}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":6,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":6,"column":0},"generated":{"line":1,"column":123}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":6,"column":0},"generated":{"line":1,"column":125}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":7,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":7,"column":0},"generated":{"line":1,"column":136}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":7,"column":0},"generated":{"line":1,"column":142}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":7,"column":0},"generated":{"line":1,"column":146}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":7,"column":0},"generated":{"line":1,"column":167}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":7,"column":0},"generated":{"line":1,"column":169}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":9,"column":0},"generated":{"line":1,"column":178}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":9,"column":0},"generated":{"line":1,"column":180}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":9,"column":0},"generated":{"line":1,"column":189}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":9,"column":0},"generated":{"line":1,"column":197}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":12,"column":0},"generated":{"line":1,"column":202}},{"source":"../../../../node_modules/@neft/compiler-document/parse/unknowns.js","original":{"line":12,"column":0},"generated":{"line":1,"column":204}}],"sources":{"../../../../node_modules/@neft/compiler-document/parse/unknowns.js":"const { Element: { Tag } } = require('@neft/core')\n\nmodule.exports = (element, parser) => {\n  const forElement = (child) => {\n    if (!(child instanceof Tag)) return\n    if (child.name.startsWith('n-') && child.visible) {\n      parser.error(new Error(`Unknown tag ${child.name}`))\n    }\n    child.children.forEach(forElement)\n  }\n\n  forElement(element)\n}\n"},"lineCount":null}},"error":null,"hash":"e83d347f1d6b86a7ffefd9deed0f54ae","cacheData":{"env":{}}}