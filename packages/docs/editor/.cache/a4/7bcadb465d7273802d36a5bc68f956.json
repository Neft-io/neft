{"id":"SZ6B","dependencies":[{"name":"/Users/krystian/Projects/OpenSource/neft/packages/docs/editor/package.json","includedInParent":true,"mtime":1560887740812},{"name":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/compiler-style/package.json","includedInParent":true,"mtime":1560887274599},{"name":"fs","loc":{"line":5,"column":15},"parent":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/compiler-style/src/astParser.coffee","resolved":"/Users/krystian/Projects/OpenSource/neft/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"pegjs","loc":{"line":7,"column":16},"parent":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/compiler-style/src/astParser.coffee","resolved":"/Users/krystian/Projects/OpenSource/neft/node_modules/pegjs/lib/peg.js"},{"name":"/Users/krystian/Projects/OpenSource/neft/node_modules/@neft/compiler-style/src/grammar.pegjs","includedInParent":true,"mtime":1560888083519}],"generated":{"js":"(function(){\"use strict\";var n,e,t;require(\"fs\"),n=require(\"pegjs\"),t=n.generate('{\\n    var RESERVED_ATTRIBUTES = {id: true};\\n\\n    function warning(msg) {\\n        var startLocation = location().start;\\n        options.warnings.push({\\n            message: msg,\\n            line: startLocation.line,\\n            column: startLocation.column\\n        });\\n    }\\n\\n    function forEachType(arr, type, callback){\\n        for (var i = 0, n = arr.length; i < n; i++){\\n            if (arr[i].type === type) callback(arr[i], i, arr);\\n        }\\n    }\\n\\n    function flattenArray(arr){\\n        for (var i = 0, n = arr.length; i < n; i++){\\n            if (!Array.isArray(arr[i]))\\n                continue;\\n\\n            var child = arr[i];\\n\\n            child.unshift(i, 1);\\n            arr.splice.apply(arr, child);\\n\\n            i--;\\n            n += child.length - 3;\\n        }\\n\\n        return arr;\\n    }\\n}\\n\\nStart\\n    = constants:Constant* objects:MainType* {\\n        return {\\n            constants: constants,\\n            objects: objects\\n        };\\n    }\\n\\n/* HELPERS */\\n\\nSourceCharacter\\n    = .\\n\\nLetter \"letter\"\\n    = [a-zA-Z_$]\\n\\nWord \"word\"\\n    = $[a-zA-Z0-9_$]+\\n\\nVariable\\n    = $(Letter Word?)\\n\\nReference\\n    = $(Variable (\".\" Variable)+)\\n\\nLineTerminator \"line terminator\"\\n    = [\\\\n\\\\r\\\\u2028\\\\u2029]\\n\\nLineTerminatorSequence \"end of line\"\\n    = \"\\\\n\"\\n    / \"\\\\r\\\\n\"\\n    / \"\\\\r\"\\n    / \"\\\\u2028\"\\n    / \"\\\\u2029\"\\n\\nZs = [\\\\u0020\\\\u00A0\\\\u1680\\\\u2000-\\\\u200A\\\\u202F\\\\u205F\\\\u3000]\\nWhiteSpace \"whitespace\"\\n    = \"\\\\t\"\\n    / \"\\\\v\"\\n    / \"\\\\f\"\\n    / \" \"\\n    / \"\\\\u00A0\"\\n    / \"\\\\uFEFF\"\\n    / Zs\\n\\nHexDigit\\n    = [0-9a-f]i\\n\\nDecimalDigit\\n    = [0-9]\\n\\nSingleEscapeCharacter \"escape character\"\\n    = \"\\'\"\\n    / \\'\"\\'\\n    / \"\\\\\\\\\"\\n    / \"b\"  { return \"\\\\b\";   }\\n    / \"f\"  { return \"\\\\f\";   }\\n    / \"n\"  { return \"\\\\n\";   }\\n    / \"r\"  { return \"\\\\r\";   }\\n    / \"t\"  { return \"\\\\t\";   }\\n    / \"v\"  { return \"\\\\x0B\"; }   // IE does not recognize \"\\\\v\".\\n\\nNonEscapeCharacter\\n  = !(EscapeCharacter / LineTerminator) SourceCharacter { return text(); }\\n\\nEscapeCharacter\\n    = SingleEscapeCharacter\\n    / DecimalDigit\\n    / \"x\"\\n    / \"u\"\\n\\nComment \"comment\"\\n    = MultiLineComment\\n    / SingleLineComment\\n\\nMultiLineComment\\n    = WhiteSpace* \"/*\" (!\"*/\" SourceCharacter)* \"*/\"\\n\\nSingleLineComment\\n    = WhiteSpace* \"//\" (!LineTerminator SourceCharacter)*\\n\\nStringLiteral \"string literal\"\\n    = \\'\"\\' chars:$DoubleStringCharacter* \\'\"\\' {\\n        return chars;\\n    }\\n    / \"\\'\" chars:$SingleStringCharacter* \"\\'\" {\\n        return chars;\\n    }\\n\\nDoubleStringCharacter\\n    = !(\\'\"\\' / \"\\\\\\\\\" / LineTerminator) SourceCharacter { return text(); }\\n    / \"\\\\\\\\\" sequence:EscapeSequence { return sequence; }\\n    / LineContinuation\\n\\nSingleStringCharacter\\n    = !(\"\\'\" / \"\\\\\\\\\" / LineTerminator) SourceCharacter { return text(); }\\n    / \"\\\\\\\\\" sequence:EscapeSequence { return sequence; }\\n    / LineContinuation\\n\\nLineContinuation\\n    = \"\\\\\\\\\" LineTerminatorSequence { return \"\"; }\\n\\nInlineBrackets\\n    = \\'(\\' (!\\')\\' (StringLiteral / InlineBrackets / SourceCharacter))* \\')\\'\\n\\nEscapeSequence\\n    = CharacterEscapeSequence\\n    / \"0\" !DecimalDigit { return \"\\\\0\"; }\\n    / HexEscapeSequence\\n    / UnicodeEscapeSequence\\n\\nCharacterEscapeSequence\\n    = SingleEscapeCharacter\\n    / NonEscapeCharacter\\n\\nHexEscapeSequence\\n    = \"x\" digits:$(HexDigit HexDigit) {\\n        return String.fromCharCode(parseInt(digits, 16));\\n    }\\n\\nUnicodeEscapeSequence\\n    = \"u\" digits:$(HexDigit HexDigit HexDigit HexDigit) {\\n        return String.fromCharCode(parseInt(digits, 16));\\n    }\\n\\n__\\n    = (WhiteSpace / LineTerminatorSequence / Comment)*\\n\\n/* ATTRIBUTE */\\n\\nAttributeName \"attribute name\"\\n    = name:(Reference / Variable) {\\n        if (RESERVED_ATTRIBUTES[name]){\\n            error(name+\" syntax error\");\\n        }\\n        return name;\\n    }\\n\\nAttributeEnds\\n    = \";\"\\n    / LineTerminator\\n    / Comment\\n\\nAttributeBody\\n    = d:Type AttributeEnds? { return d }\\n    / \"{\" __ \"}\" AttributeEnds { return \"{}\" }\\n    / \"[\" __ \"]\" AttributeEnds { return \"[]\" }\\n    / \"{\" d:(__ d:Declaration __ { return d })* __ \"}\" AttributeEnds { return d }\\n    / \"[\" d:Type* \"]\" AttributeEnds { return d }\\n    / d:$StringLiteral AttributeEnds { return d }\\n    / value:(!AttributeEnds d:($StringLiteral/SourceCharacter) {return d})+ AttributeEnds {\\n        return value.join(\\'\\').trim()\\n    }\\n\\nAttributeDeclaration\\n    = name:AttributeName \":\" WhiteSpace* {return name}\\n\\nAttribute \"attribute\"\\n    = name:AttributeDeclaration value:AttributeBody {\\n        return { type: \\'attribute\\', name: name, value: value };\\n    }\\n\\n/* PROPERTY */\\n\\nPropertyToken\\n    = \"property\"\\n\\nPropertyValue\\n    = Function\\n    / Attribute\\n    / d:AttributeName AttributeEnds {return d}\\n\\nFullProperty\\n    = PropertyToken WhiteSpace+ value:PropertyValue {\\n        var name = value.name || value;\\n        var obj = { type: \\'property\\', name: name };\\n        return typeof value === \\'string\\' ? obj : [obj, value];\\n    }\\n\\nFunctionProperty\\n    = d:NamedFunction {\\n        return [\\n            { type: \\'property\\', name: d.name },\\n            d\\n        ];\\n    }\\n\\nProperty \"custom property\"\\n    = FullProperty\\n    / FunctionProperty\\n\\n/* SIGNAL */\\n\\nSignalToken\\n    = \"signal\"\\n\\nSignalValue\\n    = Function\\n    / d:AttributeName AttributeEnds {return d}\\n\\nSignal \"custom signal\"\\n    = SignalToken WhiteSpace+ value:SignalValue {\\n        var name = value.name || value;\\n        var obj = { type: \\'signal\\', name: name };\\n        return typeof value === \\'string\\' ? obj : [obj, value];\\n    }\\n\\n/* ID */\\n\\nIdToken\\n    = \"id\"\\n\\nId \"id declaration\"\\n    = IdToken \":\" WhiteSpace* value:Variable AttributeEnds {\\n        if (options.ids[value]) {\\n            error(\"Id \\'\" + value + \"\\' is already defined\");\\n        }\\n        options.ids[value] = true;\\n        return { type: \\'id\\', value: value };\\n    }\\n\\n/* FUNCTION */\\n\\nFunctionToken\\n    = \"function\"\\n\\nFunctionBody \"function brackets\"\\n    = \"{\" FunctionInnerBody \"}\"\\n\\nFunctionInnerBody \"function brackets\"\\n    = (!\"}\" FunctionBodyText)*\\n\\nFunctionBodyText \"function code\"\\n    = StringLiteral / Comment / FunctionBody / SourceCharacter\\n\\nFunctionParams \"function parameters\"\\n    = \"(\" first:Variable? rest:(WhiteSpace* \",\" WhiteSpace* d:Variable { return d })* \")\" {\\n        return first ? flattenArray([first, rest]) : [];\\n    }\\n\\nFunctionName \"function name\"\\n    = (Variable \".\")* Variable\\n\\nFunction \"function\"\\n    = name:$FunctionName (\":\" WhiteSpace* FunctionToken)? WhiteSpace* params:FunctionParams WhiteSpace* \"{\" body:$FunctionInnerBody \"}\" AttributeEnds {\\n        return { type: \\'function\\', name: name, params: params, code: body };\\n    }\\n\\n/* NAMED FUNCTION */\\n\\nNamedFunction \"function with name\"\\n    = FunctionToken WhiteSpace+ name:$FunctionName WhiteSpace* params:FunctionParams WhiteSpace* \"{\" body:$FunctionInnerBody \"}\" AttributeEnds {\\n        return { type: \\'function\\', name: name, params: params, code: body };\\n    }\\n\\n/* ANONYMOUS FUNCTION */\\n\\nAnonymousFunction \"anonymous function\"\\n    = FunctionToken WhiteSpace* params:FunctionParams WhiteSpace* \"{\" body:$FunctionInnerBody \"}\" AttributeEnds {\\n        return { type: \\'function\\', name: \\'\\', params: params, code: body };\\n    }\\n\\n/* DECLARATION */\\n\\nDeclaration\\n    = __ d:(Function / Id / Attribute / Property / Signal / Type) {\\n        return d\\n    }\\n\\nDeclarations\\n    = d:(Declaration / ConditionStatement / SelectStatement)* { return flattenArray(d) }\\n\\n/* TYPE */\\n\\nTypeNameRest\\n    = \".\" (\"/\"? Variable)+\\n    / \"[\\'\" ((\".\" / \"/\")? Variable)+ \"\\']\"\\n    / \"[\\\\\"\" ((\".\" / \"/\")? Variable)+ \"\\\\\"]\"\\n\\nTypeName \"renderer type name\"\\n    = \"@\" d:$(Variable TypeNameRest?) {\\n        if (d.indexOf(\\'/\\') !== -1 && d.indexOf(\\'[\\') === -1){\\n            return d.replace(/\\\\.([a-zA-Z0-9_/]+)$/, \"[\\'$1\") + \"\\']\";\\n        }\\n        return d;\\n    }\\n\\nTypeBody \"renderer type body\"\\n    = __ d:Declarations __ { return d }\\n\\nType \"renderer type\"\\n    = __ name:TypeName query:$(WhiteSpace+ SelectCondition)? WhiteSpace* \"{\" body:TypeBody \"}\" __ {\\n        var obj = { type: \\'object\\', name: name, id: \\'\\', body: body };\\n\\n        forEachType(body, \"id\", function(elem){\\n            if (obj.id){\\n                error(\"item can has only one id\");\\n            }\\n            obj.id = elem.value;\\n        });\\n\\n        if (!obj.id) {\\n            obj.id = \"_i\" + options.lastUid++;\\n        }\\n\\n        if (query) {\\n        \\tobj.body.unshift({ type: \\'attribute\\', name: \\'query\\', value: \"\\'\" + query.trim() + \"\\'\" })\\n        }\\n\\n        return obj;\\n    }\\n\\nMainType\\n    = Type / SelectStatement\\n\\n/* CONDITION STATEMENT */\\n\\nConditionToken\\n    = \"if\"\\n\\nConditionStatement \"condition statement\"\\n    = __ ConditionToken WhiteSpace* \"(\" WhiteSpace* cond:$(!\")\" d:($StringLiteral/$InlineBrackets/SourceCharacter) {return d})+ WhiteSpace* \")\" WhiteSpace* \"{\" body:TypeBody \"}\" __ {\\n        return { type: \\'condition\\', condition: cond, body: body };\\n    }\\n\\n/* SELECT STATEMENT */\\n\\nSelectCondition\\n\\t= $[^{}\\\\n@]+\\n\\nSelectStatement \"select statement\"\\n    = __ cond:SelectCondition WhiteSpace* \"{\" body:TypeBody \"}\" __ {\\n        return { type: \\'select\\', query: \"\\'\" + cond.trim() + \"\\'\", body: body };\\n    }\\n\\n/* CONSTANT */\\n\\nConstantToken\\n    = \"const\"\\n\\nConstantValue \"constant value\"\\n    = $NamedFunction\\n    / $AnonymousFunction\\n    / $StringLiteral\\n    / $FunctionBody\\n    / d:$(!AttributeEnds SourceCharacter)+ AttributeEnds {return d}\\n\\nConstant \"constant value\"\\n    = __ ConstantToken WhiteSpace+ name:$(!\"=\" .)+ \"=\" WhiteSpace+ value:ConstantValue AttributeEnds? __ {\\n        return {\\n            name: name.trim(),\\n            value: value\\n        };\\n    }\\n'),e=function(n,e){var t,r,a,i,o,u,c,d,s;if(!e.location)return e;for(i=n.split(\"\\n\"),s=(u=e.location).start,t=u.end,o=\"\\n\",r=a=c=s.line-1,d=t.line-1;c<=d?a<=d:a>=d;r=c<=d?++a:--a)o+=\"    \"+i[r]+\"\\n\";return o+=\"Line: \"+s.line+\"\\n\\nColumn: \"+s.column+\"\\n\\n\"+e.message},exports.parse=function(n,r){var a,i,o,u,c;c=[];try{o=t.parse(n,{warnings:c,ids:{},lastUid:0})}catch(d){throw Error(e(n,d))}for(a=0,i=c.length;a<i;a++)u=c[a],r.warning(u.message);return o}}).call(this);"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":1,"column":0},"generated":{"line":1,"column":1}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":2,"column":2},"generated":{"line":1,"column":12}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"PEG","original":{"line":3,"column":6},"generated":{"line":1,"column":25}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"PEG","original":{"line":3,"column":6},"generated":{"line":1,"column":29}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"getErrorMessage","original":{"line":3,"column":15},"generated":{"line":1,"column":31}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"pegParser","original":{"line":3,"column":41},"generated":{"line":1,"column":33}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"require","original":{"line":5,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":5,"column":15},"generated":{"line":1,"column":43}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"PEG","original":{"line":7,"column":2},"generated":{"line":1,"column":49}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"require","original":{"line":7,"column":8},"generated":{"line":1,"column":51}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":7,"column":16},"generated":{"line":1,"column":59}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"pegParser","original":{"line":11,"column":2},"generated":{"line":1,"column":68}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"PEG","original":{"line":11,"column":14},"generated":{"line":1,"column":70}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"generate","original":{"line":11,"column":18},"generated":{"line":1,"column":72}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":9,"column":2},"generated":{"line":1,"column":81}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"getErrorMessage","original":{"line":13,"column":2},"generated":{"line":1,"column":9915}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":13,"column":20},"generated":{"line":1,"column":9917}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"nml","original":{"line":13,"column":29},"generated":{"line":1,"column":9926}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":13,"column":34},"generated":{"line":1,"column":9928}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"end","original":{"line":14,"column":8},"generated":{"line":1,"column":9931}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"end","original":{"line":14,"column":8},"generated":{"line":1,"column":9935}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"i","original":{"line":14,"column":13},"generated":{"line":1,"column":9937}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":14,"column":16},"generated":{"line":1,"column":9939}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"lines","original":{"line":14,"column":19},"generated":{"line":1,"column":9941}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"msg","original":{"line":14,"column":26},"generated":{"line":1,"column":9943}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref","original":{"line":14,"column":31},"generated":{"line":1,"column":9945}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref1","original":{"line":14,"column":36},"generated":{"line":1,"column":9947}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref2","original":{"line":14,"column":42},"generated":{"line":1,"column":9949}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"start","original":{"line":14,"column":48},"generated":{"line":1,"column":9951}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":15,"column":8},"generated":{"line":1,"column":9953}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":15,"column":9},"generated":{"line":1,"column":9957}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"location","original":{"line":15,"column":15},"generated":{"line":1,"column":9959}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":16,"column":13},"generated":{"line":1,"column":9968}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":16,"column":13},"generated":{"line":1,"column":9975}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"i","original":{"line":21,"column":9},"generated":{"line":1,"column":9977}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"lines","original":{"line":18,"column":4},"generated":{"line":1,"column":9981}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"nml","original":{"line":18,"column":12},"generated":{"line":1,"column":9983}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"split","original":{"line":18,"column":16},"generated":{"line":1,"column":9985}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":18,"column":22},"generated":{"line":1,"column":9991}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"start","original":{"line":19,"column":26},"generated":{"line":1,"column":9997}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref","original":{"line":19,"column":4},"generated":{"line":1,"column":10000}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":19,"column":10},"generated":{"line":1,"column":10002}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"location","original":{"line":19,"column":16},"generated":{"line":1,"column":10004}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"start","original":{"line":19,"column":38},"generated":{"line":1,"column":10014}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"end","original":{"line":19,"column":45},"generated":{"line":1,"column":10020}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref","original":{"line":19,"column":51},"generated":{"line":1,"column":10022}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"end","original":{"line":19,"column":55},"generated":{"line":1,"column":10024}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"msg","original":{"line":20,"column":4},"generated":{"line":1,"column":10028}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":20,"column":10},"generated":{"line":1,"column":10030}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"i","original":{"line":21,"column":9},"generated":{"line":1,"column":10035}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":21,"column":13},"generated":{"line":1,"column":10037}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref1","original":{"line":21,"column":17},"generated":{"line":1,"column":10039}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"start","original":{"line":21,"column":24},"generated":{"line":1,"column":10041}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"line","original":{"line":21,"column":30},"generated":{"line":1,"column":10043}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":21,"column":37},"generated":{"line":1,"column":10048}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref2","original":{"line":21,"column":40},"generated":{"line":1,"column":10050}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"end","original":{"line":21,"column":47},"generated":{"line":1,"column":10052}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"line","original":{"line":21,"column":51},"generated":{"line":1,"column":10054}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":21,"column":58},"generated":{"line":1,"column":10059}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref1","original":{"line":21,"column":61},"generated":{"line":1,"column":10061}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref2","original":{"line":21,"column":69},"generated":{"line":1,"column":10064}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":21,"column":76},"generated":{"line":1,"column":10066}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref2","original":{"line":21,"column":81},"generated":{"line":1,"column":10069}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":21,"column":88},"generated":{"line":1,"column":10071}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref2","original":{"line":21,"column":93},"generated":{"line":1,"column":10074}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"i","original":{"line":21,"column":99},"generated":{"line":1,"column":10076}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref1","original":{"line":21,"column":103},"generated":{"line":1,"column":10078}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ref2","original":{"line":21,"column":111},"generated":{"line":1,"column":10081}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":21,"column":120},"generated":{"line":1,"column":10085}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":21,"column":126},"generated":{"line":1,"column":10089}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"msg","original":{"line":22,"column":6},"generated":{"line":1,"column":10091}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":22,"column":13},"generated":{"line":1,"column":10094}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"lines","original":{"line":22,"column":22},"generated":{"line":1,"column":10101}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"i","original":{"line":22,"column":28},"generated":{"line":1,"column":10103}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":22,"column":33},"generated":{"line":1,"column":10106}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"msg","original":{"line":25,"column":11},"generated":{"line":1,"column":10111}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"msg","original":{"line":24,"column":4},"generated":{"line":1,"column":10118}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":24,"column":11},"generated":{"line":1,"column":10121}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"start","original":{"line":24,"column":22},"generated":{"line":1,"column":10130}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"line","original":{"line":24,"column":28},"generated":{"line":1,"column":10132}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":24,"column":35},"generated":{"line":1,"column":10137}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"start","original":{"line":24,"column":52},"generated":{"line":1,"column":10152}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"column","original":{"line":24,"column":58},"generated":{"line":1,"column":10154}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":24,"column":67},"generated":{"line":1,"column":10161}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":24,"column":76},"generated":{"line":1,"column":10168}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"message","original":{"line":24,"column":82},"generated":{"line":1,"column":10170}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"exports","original":{"line":28,"column":2},"generated":{"line":1,"column":10179}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"parse","original":{"line":28,"column":10},"generated":{"line":1,"column":10187}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":28,"column":18},"generated":{"line":1,"column":10193}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"nml","original":{"line":28,"column":27},"generated":{"line":1,"column":10202}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"parser","original":{"line":28,"column":32},"generated":{"line":1,"column":10204}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error","original":{"line":29,"column":8},"generated":{"line":1,"column":10207}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":29,"column":15},"generated":{"line":1,"column":10211}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"len","original":{"line":29,"column":18},"generated":{"line":1,"column":10213}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"result","original":{"line":29,"column":23},"generated":{"line":1,"column":10215}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warning","original":{"line":29,"column":31},"generated":{"line":1,"column":10217}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warnings","original":{"line":29,"column":40},"generated":{"line":1,"column":10219}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warnings","original":{"line":30,"column":4},"generated":{"line":1,"column":10221}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":30,"column":15},"generated":{"line":1,"column":10223}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":31,"column":8},"generated":{"line":1,"column":10226}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"result","original":{"line":32,"column":6},"generated":{"line":1,"column":10230}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"pegParser","original":{"line":32,"column":15},"generated":{"line":1,"column":10232}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"parse","original":{"line":32,"column":25},"generated":{"line":1,"column":10234}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"nml","original":{"line":32,"column":31},"generated":{"line":1,"column":10240}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":32,"column":36},"generated":{"line":1,"column":10242}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warnings","original":{"line":33,"column":8},"generated":{"line":1,"column":10243}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warnings","original":{"line":33,"column":18},"generated":{"line":1,"column":10252}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"ids","original":{"line":34,"column":8},"generated":{"line":1,"column":10254}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":34,"column":13},"generated":{"line":1,"column":10258}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"lastUid","original":{"line":35,"column":8},"generated":{"line":1,"column":10261}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":35,"column":17},"generated":{"line":1,"column":10269}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":37,"column":6},"generated":{"line":1,"column":10273}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error1","original":{"line":37,"column":13},"generated":{"line":1,"column":10279}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"Error","original":{"line":39,"column":12},"generated":{"line":1,"column":10282}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"Error","original":{"line":39,"column":12},"generated":{"line":1,"column":10288}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"getErrorMessage","original":{"line":39,"column":18},"generated":{"line":1,"column":10294}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"nml","original":{"line":39,"column":34},"generated":{"line":1,"column":10296}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"error1","original":{"line":38,"column":14},"generated":{"line":1,"column":10298}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":41,"column":9},"generated":{"line":1,"column":10302}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":41,"column":9},"generated":{"line":1,"column":10306}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":41,"column":13},"generated":{"line":1,"column":10308}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"len","original":{"line":41,"column":16},"generated":{"line":1,"column":10310}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warnings","original":{"line":41,"column":22},"generated":{"line":1,"column":10312}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"length","original":{"line":41,"column":31},"generated":{"line":1,"column":10314}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":41,"column":39},"generated":{"line":1,"column":10321}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"len","original":{"line":41,"column":43},"generated":{"line":1,"column":10323}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":41,"column":48},"generated":{"line":1,"column":10325}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warning","original":{"line":42,"column":6},"generated":{"line":1,"column":10329}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warnings","original":{"line":42,"column":16},"generated":{"line":1,"column":10331}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"j","original":{"line":42,"column":25},"generated":{"line":1,"column":10333}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"parser","original":{"line":43,"column":6},"generated":{"line":1,"column":10336}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warning","original":{"line":43,"column":13},"generated":{"line":1,"column":10338}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"warning","original":{"line":43,"column":21},"generated":{"line":1,"column":10346}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"message","original":{"line":43,"column":29},"generated":{"line":1,"column":10348}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"result","original":{"line":45,"column":11},"generated":{"line":1,"column":10357}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"result","original":{"line":45,"column":11},"generated":{"line":1,"column":10364}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","name":"call","original":{"line":48,"column":3},"generated":{"line":1,"column":10369}},{"source":"../../../../node_modules/@neft/compiler-style/src/astParser.coffee","original":{"line":48,"column":8},"generated":{"line":1,"column":10374}}],"sources":{"../../../../node_modules/@neft/compiler-style/src/astParser.coffee":"(function() {\n  'use strict';\n  var PEG, fs, getErrorMessage, grammar, pegParser;\n\n  fs = require('fs');\n\n  PEG = require('pegjs');\n\n  grammar = fs.readFileSync(__dirname + '/grammar.pegjs', 'utf-8');\n\n  pegParser = PEG.generate(grammar);\n\n  getErrorMessage = function(nml, error) {\n    var end, i, j, lines, msg, ref, ref1, ref2, start;\n    if (!error.location) {\n      return error;\n    }\n    lines = nml.split('\\n');\n    ref = error.location, start = ref.start, end = ref.end;\n    msg = '\\n';\n    for (i = j = ref1 = start.line - 1, ref2 = end.line - 1; ref1 <= ref2 ? j <= ref2 : j >= ref2; i = ref1 <= ref2 ? ++j : --j) {\n      msg += '    ' + lines[i] + '\\n';\n    }\n    msg += \"Line: \" + start.line + \"\\n\\nColumn: \" + start.column + \"\\n\\n\" + error.message;\n    return msg;\n  };\n\n  exports.parse = function(nml, parser) {\n    var error, j, len, result, warning, warnings;\n    warnings = [];\n    try {\n      result = pegParser.parse(nml, {\n        warnings: warnings,\n        ids: {},\n        lastUid: 0\n      });\n    } catch (error1) {\n      error = error1;\n      throw Error(getErrorMessage(nml, error));\n    }\n    for (j = 0, len = warnings.length; j < len; j++) {\n      warning = warnings[j];\n      parser.warning(warning.message);\n    }\n    return result;\n  };\n\n}).call(this);\n"},"lineCount":null}},"error":null,"hash":"9f3fdbde3df30bfaddb6963b85a26c8b","cacheData":{"env":{}}}