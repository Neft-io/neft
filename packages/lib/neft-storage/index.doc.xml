<meta
  name="Storage"
  category="Modules"
  description="Key-value map keep on a device"
/>

<article title="Introduction">
  <p>Storage allows you to save data directly on the device and use it later.</p>

  <p>Data is keep after app restart.</p>

  <p>Install it by typing <code>npm i @neft/storage</code> and later use it by <code>import storage from '@neft/storage'</code>.</p>
</article>

<method name=get returns="Promise&lt;String&gt;">
  <argument name=key type=string />

  <p>Returns saved value under the given key.</p>

  <p>If no key found, throws an error.</p>

  <p>The returned value is always a string. Use JSON to store structures.</p>

  <script type="neft">
    <n-call>
      {getUser()}
    </n-call>

    <div n-if={!loading}>
      <p n-if={user}>Welcome {user.name}!</p>
      <p n-else>You need to log in</p>
    </div>

    <neft-script>
    import storage from '@neft/storage'

    export default () => ({
      loading: true,
      user: null,
      async getUser() {
        try {
          this.loading = true
          this.user = JSON.parse(await storage.get('user'))
        } catch (error) {
          // handle error
        } finally {
          this.loading = false
        }
      },
    })
    </neft-script>
  </script>
</method>

<method name=set returns="Promise">
  <argument name=key type=string />
  <argument name=value type=string />

  <p>Saved value under the given key.</p>
  <p>To store an object, you need to stringify it to JSON.</p>
  <p><code>await</code> this call to make sure that the key has been updated.</p>
</method>

<method name=remove returns="Promise">
  <argument name=key type=string />

  <p>Removes the given key from the device.</p>

  <p><code>await</code> this call to make sure that the key has been removed.</p>
</method>
