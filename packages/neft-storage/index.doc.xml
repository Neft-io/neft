<meta
  name="Storage"
  category="Modules"
  description="Key-value map keep on a device"
/>

<article title="Introduction">
  <p>Storage allows you to save data directly on a device and use it later.</p>

  <p>Data is keep after app restart.</p>

  <p>Install it by typing <code>npm i @neft/storage</code> and later use it by <code>const storage = require('@neft/storage')</code>.</p>
</article>

<method name=get returns="Promise&lt;String&gt;">
  <argument name=key type=string />

  <p>Returns saved value under the given key.</p>

  <p>If no key found, throws an error.</p>

  <script type="html">
    <p n-if={user}>Welcome {user.name}!</p>
    <p n-else>You need to log in</p>

    <script->
    const storage = require('@neft/storage')

    exports.default = () => ({
      user: null,
      async getUser() {
        try {
          this.user = JSON.parse(await storage.get('user'))
        } catch (error) {}
      },
      onRender() {
        getUser()
      },
    })
    </script->
  </script>
</method>

<method name=set returns="Promise">
  <argument name=key type=string />
  <argument name=value type=string />

  <p>Saved value under the given key for later usage.</p>
  <p>To store an object, you need to stringify if firstly to JSON.</p>
</method>

<method name=remove returns="Promise">
  <argument name=key type=string />

  <p>Removes the given key from device.</p>

  <p><code>await</code> this call to make sure that the key has been removed.</p>
</method>
