var searchTexts = {"pages":["guide/get-started","guide/components","guide/scripting","guide/virtual-dom","guide/contribute","guide/data-binding","guide/extensions","guide/native-communication","guide/networking","guide/routing","guide/models","guide/static-resources","guide/styles","guide/animations","guide/components-integration","guide/custom-properties","guide/generic-styles","guide/layout","guide/main-style","guide/runtime-styling","guide/type-extending","guide/testing","api/app-route","api/app-standard-routes","api/app","api/assert","api/db","api/dict","api/document-*class*-tag-:-*element*","api/document-element","api/document-props","api/document-text","api/document","api/list","api/log","api/native","api/networking-handler","api/networking-request","api/networking-response-error","api/networking-response","api/networking-uri","api/networking","api/renderer-alignment","api/renderer-anchors","api/renderer-animation","api/renderer-class","api/renderer-column","api/renderer-device","api/renderer-easing","api/renderer-extension","api/renderer-flow","api/renderer-font","api/renderer-fontloader","api/renderer-grid","api/renderer-image","api/renderer-item","api/renderer-keys","api/renderer-layout","api/renderer-margin","api/renderer-native","api/renderer-navigator","api/renderer-numberanimation","api/renderer-parallelanimation","api/renderer-pointer","api/renderer-propertyanimation","api/renderer-rectangle","api/renderer-resourcesloader","api/renderer-row","api/renderer-screen","api/renderer-sequentialanimation","api/renderer-spacing","api/renderer-statusbar","api/renderer-text","api/renderer-transition","api/renderer","api/resources-resource","api/resources","api/schema-array-validator","api/schema-max-validator","api/schema-min-validator","api/schema-object-validator","api/schema-optional-validator","api/schema-options-validator","api/schema-regexp-validator","api/schema-type-validator","api/schema","api/signal","api/struct","api/typed-array","api/utils-asynchronous","api/utils-properties-extraction","api/utils-stringifying","api/utils"],"texts":[[0,1,"Get Started"],[0,2,"tl;dr"],[0,2,"Installation"],[0,2,"Creating app"],[0,2,"Running app"],[0,3,"WebGL renderer"],[0,3,"Text mode"],[0,2,"Production mode"],[0,2,"Local configuration file"],[0,3,"Android"],[0,2,"Watching on changes"],[1,1,"Components"],[1,2,"String Interpolation"],[1,2,"log"],[1,2,"Properties Evaluation"],[1,2,"n-if"],[1,2,"n-each"],[1,2,"ref"],[1,1,"state"],[1,1,"component"],[1,1,"import"],[1,1,"target"],[1,1,"blank"],[2,1,"Scripting"],[2,2,"Component lifecycle"],[2,2,"Custom methods"],[2,2,"this.state"],[2,2,"this.refs"],[2,2,"this.node"],[2,2,"this.props"],[2,2,"this.context"],[2,2,"Script file"],[2,2,"CoffeeScript support"],[3,1,"Virtual DOM"],[3,2,"Getting elements"],[3,2,"Querying elements"],[4,1,"Contribute"],[4,2,"1. Report issues"],[4,2,"2. Help"],[4,2,"3. Teach"],[4,2,"4. Show"],[4,2,"5. Code"],[5,1,"Data Binding"],[5,2,"Signals"],[5,3,"List"],[5,2,"Dict"],[6,1,"Extensions"],[6,2,"Types of extensions"],[7,1,"Native Communication"],[7,2,"JavaScript client"],[7,2,"iOS"],[7,2,"Android"],[8,1,"Networking"],[8,2,"AJAX request"],[8,2,"Custom headers"],[8,3,"X-Expected-Type"],[9,1,"Routing"],[9,2,"URI parameters"],[9,2,"Parameters schema"],[9,2,"Request data"],[9,2,"Request query"],[9,2,"Custom attributes"],[9,2,"Views integration"],[10,1,"Models"],[11,1,"Static Resources"],[11,2,"Config file"],[11,3,"Image resolutions"],[11,3,"Color value"],[11,2,"Using resources"],[12,1,"Styles"],[12,2,"NML"],[12,2,"Syntax"],[12,2,"Scripting"],[12,2,"Shapes"],[12,2,"Children"],[12,2,"ids"],[12,2,"Signal handlers"],[12,2,"Native Items"],[13,1,"Animations"],[13,2,"Animators"],[13,2,"NumberAnimation"],[13,2,"Transitions"],[14,1,"Components Integration"],[14,2,"Inline Styles"],[15,1,"Custom Properties"],[16,1,"Generic Styles"],[17,1,"Layout"],[17,3,"Flow"],[17,3,"Grid"],[17,3,"Anchor"],[18,1,"Main Style"],[19,1,"Runtime Styling"],[19,2,"NML Condition"],[19,2,"NML Modifier"],[19,2,"Text styling"],[19,3,"Using modifiers"],[19,3,"Using elements"],[20,1,"Type Extending"],[21,1,"Testing"],[21,2,"Test case"],[21,2,"Nesting"],[21,2,"Assertions"],[21,2,"App"],[21,2,"Asynchronous test"],[21,2,"Before and after"],[21,2,"Different environments"],[22,1,"Route"],[22,2,"Route.getTemplateComponent(componentName)"],[22,2,"Route::constructor(options)"],[22,2,"Route::method"],[22,2,"Route::uri"],[22,2,"Route::app"],[22,2,"Route::route"],[22,2,"Route::name"],[22,2,"Route::schema"],[22,2,"Route::data"],[22,2,"Route::error"],[22,2,"Route::factory()"],[22,2,"Route::init()"],[22,2,"Route::getData(callback)"],[22,2,"Route::destroy()"],[22,2,"Route::destroyJSON()"],[22,2,"Route::destroyText()"],[22,2,"Route::destroyHTML()"],[22,2,"Route::redirect"],[22,2,"Route::request"],[22,2,"Route::response"],[22,2,"Route::next()"],[22,2,"Route::toJSON()"],[22,2,"Route::toText()"],[22,2,"Route::toHTML()"],[23,1,"Standard routes"],[23,2,"app.js"],[23,2,"neft.js"],[23,2,"favicon.ico"],[23,2,"static/{path}"],[23,2,"neft-type={type}/"],[23,2,"Default route"],[24,1,"App"],[24,2,"app.config"],[24,3,"type"],[24,2,"app.networking"],[24,2,"app.routes"],[24,2,"app.styles"],[24,2,"app.components"],[24,2,"app.resources"],[24,2,"app.onReady()"],[24,2,"app.cookies"],[25,1,"Assertions"],[25,2,"assert(expression, message)"],[25,2,"Class assert.AssertionError()"],[25,2,"assert.scope(message)"],[25,2,"assert.ok(expression, message)"],[25,2,"assert.notOk(expression, message)"],[25,2,"assert.is(actual, expected, message)"],[25,2,"assert.isNot(actual, expected, message)"],[25,2,"assert.isDefined(value, message)"],[25,2,"assert.isNotDefined(value, message)"],[25,2,"assert.isPrimitive(value, message)"],[25,2,"assert.isNotPrimitive(value, message)"],[25,2,"assert.isString(value, message)"],[25,2,"assert.isNotString(value, message)"],[25,2,"assert.isFloat(value, message)"],[25,2,"assert.isNotFloat(value, message)"],[25,2,"assert.isInteger(value, message)"],[25,2,"assert.isNotInteger(value, message)"],[25,2,"assert.isBoolean(value, message)"],[25,2,"assert.isNotBoolean(value, message)"],[25,2,"assert.isFunction(value, message)"],[25,2,"assert.isNotFunction(value, message)"],[25,2,"assert.isObject(value, message)"],[25,2,"assert.isNotObject(value, message)"],[25,2,"assert.isPlainObject(value, message)"],[25,2,"assert.isNotPlainObject(value, message)"],[25,2,"assert.isArray(value, message)"],[25,2,"assert.isNotArray(value, message)"],[25,2,"assert.isEqual(value1, value2, message, options)"],[25,2,"assert.isNotEqual(value1, value2, message, options)"],[25,2,"assert.instanceOf(object, constructor, message)"],[25,2,"assert.notInstanceOf(object, constructor, message)"],[25,2,"assert.lengthOf(value, length, message)"],[25,2,"assert.notLengthOf(value, length, message)"],[25,2,"assert.operator(value1, operator, value2, message)"],[25,2,"assert.match(value, regexp, message)"],[25,2,"assert.notMatch(value, regexp, message)"],[26,1,"Database"],[26,2,"db.OBSERVABLE"],[26,2,"db.get(key, options, callback)"],[26,2,"db.set(key, value, callback)"],[26,2,"db.remove(key, value, callback)"],[26,2,"db.append(key, value, callback)"],[26,2,"DbList()"],[26,2,"DbList::disconnect()"],[26,2,"DbDict()"],[26,2,"DbDict::disconnect()"],[27,1,"Dict"],[27,2,"Dict.fromJSON(json)"],[27,2,"Dict::constructor(data)"],[27,2,"Dict::length"],[27,2,"Dict::onChange(key, oldValue)"],[27,2,"Dict::set(key, value)"],[27,2,"Dict::has(key)"],[27,2,"Dict::extend(object)"],[27,2,"Dict::pop(key)"],[27,2,"Dict::clear()"],[27,2,"Dict::keys()"],[27,2,"Dict::values()"],[27,2,"Dict::items()"],[28,1,"Tag"],[28,2,"Tag::constructor()"],[28,2,"Tag::name"],[28,2,"Tag::children"],[28,2,"Tag::onChildrenChange(added, removed)"],[28,2,"Tag::props"],[28,2,"Tag::onPropsChange(attribute, oldValue)"],[28,2,"Tag::cloneDeep()"],[28,2,"Tag::getCopiedElement(lookForElement, copiedParent)"],[28,2,"Tag::getChildByAccessPath(accessPath)"],[28,2,"Tag::queryAll(query, onElement, onElementContext)"],[28,2,"Tag::query(query)"],[28,2,"Tag::watch(query)"],[28,2,"Tag::stringify(replacements)"],[28,2,"Tag::stringifyChildren(replacements)"],[28,2,"Tag::replace(oldElement, newElement)"],[29,1,"Element"],[29,2,"Element.fromHTML(html)"],[29,2,"Element.fromJSON(json)"],[29,2,"Element::constructor()"],[29,2,"Element::index"],[29,2,"Element::nextSibling"],[29,2,"Element::previousSibling"],[29,2,"Element::parent"],[29,2,"Element::onParentChange(oldValue)"],[29,2,"Element::style"],[29,2,"Element::onStyleChange(oldValue)"],[29,2,"Element::visible"],[29,2,"Element::onVisibleChange(oldValue)"],[29,2,"Element::queryAllParents(query)"],[29,2,"Element::queryParents(query)"],[29,2,"Element::getAccessPath(toParent)"],[29,2,"Element::clone()"],[29,2,"Element::toJSON()"],[30,1,"Props"],[30,2,"Props::item(index, target)"],[30,2,"Props::has(name)"],[30,2,"Props::set(name, value)"],[31,1,"Text"],[31,2,"Text::constructor()"],[31,2,"Text::text"],[31,2,"Text::onTextChange(oldValue)"],[32,1,"Document"],[32,2,"Document.onBeforeRender(file)"],[32,2,"Document.onRender(file)"],[32,2,"Document.onBeforeRevert(file)"],[32,2,"Document.onRevert(file)"],[32,2,"Document.fromHTML(path, html)"],[32,2,"Document.fromElement(path, element)"],[32,2,"Document.fromJSON(json)"],[32,2,"Document.parse(file)"],[32,2,"Document.factory(path)"],[32,2,"Document::constructor(path, element)"],[32,1,"Document::render(props, context, source)"],[32,2,"Document::revert()"],[32,2,"Document::use(useName, document)"],[32,2,"Document::onReplaceByUse(use)"],[32,2,"Document::clone()"],[32,2,"Document::destroy()"],[32,2,"Document::toJSON()"],[33,1,"List"],[33,2,"List::constructor(data)"],[33,2,"List::onChange(oldValue, index)"],[33,2,"List::onInsert(value, index)"],[33,2,"List::onPop(oldValue, index)"],[33,2,"List::length"],[33,2,"List::set(index, value)"],[33,2,"List::append(value)"],[33,2,"List::insert(index, value)"],[33,2,"List::extend(items)"],[33,2,"List::remove(value)"],[33,2,"List::pop(index)"],[33,2,"List::clear()"],[33,2,"List::index(value)"],[33,2,"List::has(value)"],[33,2,"List::toArray()"],[34,1,"Log"],[35,1,"Native"],[35,2,"native.callNativeFunction(name, args...)"],[35,2,"native.onNativeEvent(eventName, listener)"],[36,1,"Handler"],[36,2,"Handler::constructor(options)"],[36,2,"Handler::method"],[36,2,"Handler::uri"],[36,2,"Handler::schema"],[36,2,"Handler::callback"],[36,2,"Handler::exec(request, response, next)"],[36,2,"Handler::toString()"],[37,1,"Request"],[37,2,"Request.METHODS"],[37,2,"Request.TYPES"],[37,2,"Request::constructor(options)"],[37,2,"Request::onLoadEnd(error, data)"],[37,2,"Request::uid"],[37,2,"Request::pending"],[37,2,"Request::method"],[37,2,"Request::uri"],[37,2,"Request::type"],[37,2,"Request::data"],[37,2,"Request::handler"],[37,2,"Request::response"],[37,2,"Request::params"],[37,2,"Request::headers"],[37,2,"Request::cookies"],[37,2,"Request::toString()"],[38,1,"Response Error"],[39,1,"Response"],[39,2,"Response.STATUSES"],[39,2,"Response::constructor(options)"],[39,2,"Response::onSend()"],[39,2,"Response::pending"],[39,2,"Response::request"],[39,2,"Response::status"],[39,2,"Response::data"],[39,2,"Response::headers"],[39,2,"Response::cookies"],[39,2,"Response::encoding"],[39,2,"Response::setHeader(name, value)"],[39,2,"Response::send(status, data)"],[39,2,"Response::redirect(status, uri)"],[39,2,"Response::raise(error)"],[39,2,"Response::isSucceed()"],[40,1,"Uri"],[40,2,"Uri::constructor(uri)"],[40,2,"Uri::protocol"],[40,2,"Uri::auth"],[40,2,"Uri::host"],[40,2,"Uri::path"],[40,2,"Uri::params"],[40,2,"Uri::query"],[40,2,"Uri::hash"],[40,2,"Uri::test(uri)"],[40,2,"Uri::match(uri)"],[40,2,"Uri::toString(params)"],[41,1,"Networking"],[41,2,"Networking::constructor(options)"],[41,2,"Networking::onRequest(request, response)"],[41,2,"Networking::protocol"],[41,2,"Networking::port"],[41,2,"Networking::host"],[41,2,"Networking::url"],[41,2,"Networking::language"],[41,2,"Networking::pendingRequests"],[41,2,"Networking::createHandler(options)"],[41,2,"Networking::createRequest(options)"],[41,2,"Networking::get(uri, onLoadEnd)"],[41,2,"Networking::post(uri, data, onLoadEnd)"],[41,2,"Networking::put(uri, data, onLoadEnd)"],[41,2,"Networking::delete(uri, data, onLoadEnd)"],[41,2,"Networking::resolveRequest(request)"],[41,2,"Networking::createLocalRequest(options)"],[41,3,"Local requests"],[41,3,"Requests to the server"],[42,1,"Alignment"],[42,2,"Alignment::horizontal"],[42,2,"Alignment::onHorizontalChange(oldValue)"],[42,2,"Alignment::vertical"],[42,2,"Alignment::onVerticalChange(oldValue)"],[43,1,"Anchors"],[43,2,"Anchors::left"],[43,2,"Anchors::onLeftChange(oldValue)"],[43,2,"Anchors::right"],[43,2,"Anchors::onRightChange(oldValue)"],[43,2,"Anchors::horizontalCenter"],[43,2,"Anchors::onHorizontalCenterChange(oldValue)"],[43,2,"Anchors::top"],[43,2,"Anchors::onTopChange(oldValue)"],[43,2,"Anchors::bottom"],[43,2,"Anchors::onBottomChange(oldValue)"],[43,2,"Anchors::verticalCenter"],[43,2,"Anchors::onVerticalCenterChange(oldValue)"],[43,2,"Anchors::centerIn"],[43,2,"Anchors::onCenterInChange(oldValue)"],[43,2,"Anchors::fill"],[43,2,"Anchors::onFillChange(oldValue)"],[43,2,"Anchors::fillWidth"],[43,2,"Anchors::onFillWidthChange(oldValue)"],[43,2,"Anchors::fillHeight"],[43,2,"Anchors::onFillHeightChange(oldValue)"],[44,1,"Animation"],[44,2,"Animation::constructor()"],[44,2,"Animation::onStart()"],[44,2,"Animation::onStop()"],[44,2,"Animation::paused"],[44,2,"Animation::onPausedChange(oldValue)"],[44,2,"Animation::reversed"],[44,2,"Animation::onReversedChange(oldValue)"],[44,2,"Animation::loop"],[44,2,"Animation::onLoopChange(oldValue)"],[44,2,"Animation::start()"],[44,2,"Animation::stop()"],[44,2,"Animation::pause()"],[44,2,"Animation::resume()"],[45,1,"Class"],[45,2,"Class.New(options)"],[45,2,"Class::constructor()"],[45,2,"Class::name"],[45,2,"Class::onNameChange(oldValue)"],[45,2,"Class::target"],[45,2,"Class::onTargetChange(oldValue)"],[45,2,"Class::changes"],[45,2,"Class::priority"],[45,2,"Class::onPriorityChange(oldValue)"],[45,2,"Class::running"],[45,2,"Class::onRunningChange(oldValue)"],[45,2,"Class::children"],[45,2,"Class::children.length"],[45,2,"Class::children.append(value)"],[45,2,"Class::children.pop(index)"],[45,2,"Class::document"],[45,2,"Class::onDocumentChange(document)"],[45,2,"Class::document.onNodeAdd(node)"],[45,2,"Class::document.onNodeRemove(node)"],[45,2,"Class::document.query"],[45,2,"Class::document.onQueryChange(oldValue)"],[45,2,"Item::classes"],[45,2,"Item::onClassesChange(added, removed)"],[46,1,"Column"],[46,2,"Column.New(options)"],[46,2,"Column::constructor()"],[46,2,"Column::padding"],[46,2,"Column::onPaddingChange(padding)"],[46,2,"Column::spacing"],[46,2,"Column::onSpacingChange(oldValue)"],[46,2,"Column::alignment"],[46,2,"Column::onAlignmentChange(oldValue)"],[46,2,"Column::includeBorderMargins"],[46,2,"Column::onIncludeBorderMarginsChange(oldValue)"],[47,1,"Device"],[47,2,"Device.platform"],[47,2,"Device.desktop"],[47,2,"Device.tablet"],[47,2,"Device.phone"],[47,2,"Device.mobile"],[47,2,"Device.pixelRatio"],[47,2,"Device.log(message...)"],[47,2,"Device.pointer"],[47,2,"Device.onPointerPress(event)"],[47,2,"Device.onPointerRelease(event)"],[47,2,"Device.onPointerMove(event)"],[47,2,"Device.onPointerWheel(event)"],[47,2,"Device.keyboard"],[47,2,"Device.onKeyPress(event)"],[47,2,"Device.onKeyHold(event)"],[47,2,"Device.onKeyRelease(event)"],[47,2,"Device.onKeyInput(event)"],[47,1,"Class Device.PointerEvent"],[47,2,"PointerEvent::Device.x"],[47,2,"PointerEvent::Device.onXChange(oldValue)"],[47,2,"PointerEvent::Device.y"],[47,2,"PointerEvent::Device.onYChange(oldValue)"],[47,2,"PointerEvent::Device.movementX"],[47,2,"PointerEvent::Device.onMovementXChange(oldValue)"],[47,2,"PointerEvent::Device.movementY"],[47,2,"PointerEvent::Device.onMovementYChange(oldValue)"],[47,2,"PointerEvent::Device.deltaX"],[47,2,"PointerEvent::Device.onDeltaXChange(oldValue)"],[47,2,"PointerEvent::Device.deltaY"],[47,2,"PointerEvent::Device.onDeltaYChange(oldValue)"],[47,1,"Class Device.KeyboardEvent()"],[47,2,"KeyboardEvent::Device.visible"],[47,2,"KeyboardEvent::Device.onVisibleChange(oldValue)"],[47,2,"KeyboardEvent::Device.height"],[47,2,"KeyboardEvent::Device.onHeightChange(oldValue)"],[47,2,"KeyboardEvent::Device.key"],[47,2,"KeyboardEvent::Device.onKeyChange(oldValue)"],[47,2,"KeyboardEvent::Device.text"],[47,2,"KeyboardEvent::Device.onTextChange(oldValue)"],[47,2,"KeyboardEvent::Device.show()"],[47,2,"KeyboardEvent::Device.hide()"],[48,1,"Easing"],[48,2,"Easing::constructor()"],[48,2,"Easing::type"],[48,2,"Easing::onTypeChange(oldValue)"],[48,2,"Easing::steps"],[49,1,"Extension"],[49,2,"Extension::target"],[49,2,"Extension::onTargetChange(oldValue)"],[49,2,"Extension::running"],[49,2,"Extension::onRunningChange(oldValue)"],[50,1,"Flow"],[50,2,"Flow.New(options)"],[50,2,"Flow::constructor()"],[50,2,"Flow::padding"],[50,2,"Flow::onPaddingChange(padding)"],[50,2,"Flow::spacing"],[50,2,"Flow::onSpacingChange(oldValue)"],[50,2,"Flow::alignment"],[50,2,"Flow::onAlignmentChange(oldValue)"],[50,2,"Flow::includeBorderMargins"],[50,2,"Flow::onIncludeBorderMarginsChange(oldValue)"],[50,2,"Flow::collapseMargins"],[50,2,"Flow::onCollapseMarginsChange(oldValue)"],[51,1,"Font"],[51,2,"Font.family"],[51,2,"Font.onFamilyChange(oldValue)"],[51,2,"Font.pixelSize"],[51,2,"Font.onPixelSizeChange(oldValue)"],[51,2,"Font.weight"],[51,2,"Font.onWeightChange(oldValue)"],[51,2,"Font.wordSpacing"],[51,2,"Font.onWordSpacingChange(oldValue)"],[51,2,"Font.letterSpacing"],[51,2,"Font.onLetterSpacingChange(oldValue)"],[51,2,"Font.italic"],[51,2,"Font.onItalicChange(oldValue)"],[52,1,"FontLoader"],[52,2,"FontLoader.New(options)"],[52,2,"FontLoader::name"],[52,2,"FontLoader::source"],[52,2,"FontLoader::loaded"],[52,2,"FontLoader::onLoadedChange(oldValue)"],[52,2,"FontLoader::onLoad()"],[52,2,"FontLoader::onError(error)"],[53,1,"Grid"],[53,2,"Grid.New(options)"],[53,2,"Grid::constructor()"],[53,2,"Grid::padding"],[53,2,"Grid::onPaddingChange(padding)"],[53,2,"Grid::columns"],[53,2,"Grid::onColumnsChange(oldValue)"],[53,2,"Grid::rows"],[53,2,"Grid::onRowsChange(oldValue)"],[53,2,"Grid::spacing"],[53,2,"Grid::onSpacingChange(oldValue)"],[53,2,"Grid::alignment"],[53,2,"Grid::onAlignmentChange(oldValue)"],[53,2,"Grid::includeBorderMargins"],[53,2,"Grid::onIncludeBorderMarginsChange(oldValue)"],[54,1,"Image"],[54,2,"Image.New(options)"],[54,2,"Image::constructor()"],[54,2,"Image.pixelRatio"],[54,2,"Image.onPixelRatioChange(oldValue)"],[54,2,"Image::width"],[54,2,"Image::height"],[54,2,"Image::source"],[54,2,"Image::onSourceChange(oldValue)"],[54,2,"Image::resolution"],[54,2,"Image::sourceWidth"],[54,2,"Image::onSourceWidthChange(oldValue)"],[54,2,"Image::sourceHeight"],[54,2,"Image::onSourceHeightChange(oldValue)"],[54,2,"Image::loaded"],[54,2,"Image::onLoadedChange(oldValue)"],[54,2,"Image::onLoad()"],[54,2,"Image::onError(error)"],[55,1,"Item"],[55,2,"Item.New(options)"],[55,2,"Item::constructor()"],[55,3,"Custom properties"],[55,3,"Custom signals"],[55,2,"Item::query"],[55,2,"Item::node"],[55,2,"Item::onNodeChange(oldValue)"],[55,2,"Item::ready()"],[55,2,"Item::onAnimationFrame(miliseconds)"],[55,2,"Item::id"],[55,2,"Item::children"],[55,2,"Item::onChildrenChange(added, removed)"],[55,3,"Item::children.firstChild"],[55,3,"Item::children.lastChild"],[55,3,"Item::children.bottomChild"],[55,3,"Item::children.topChild"],[55,3,"Item::children.length"],[55,3,"Item::children.layout"],[55,3,"Item::children.onLayoutChange(oldValue)"],[55,3,"Item::children.target"],[55,3,"Item::children.onTargetChange(oldValue)"],[55,3,"Item::children.get(index)"],[55,3,"Item::children.index(value)"],[55,3,"Item::children.has(value)"],[55,3,"Item::children.clear()"],[55,2,"Item::parent"],[55,2,"Item::onParentChange(oldParent)"],[55,2,"Item::previousSibling"],[55,2,"Item::onPreviousSiblingChange(oldValue)"],[55,2,"Item::nextSibling"],[55,2,"Item::onNextSiblingChange(oldValue)"],[55,2,"Item::belowSibling"],[55,2,"Item::aboveSibling"],[55,2,"Item::index"],[55,2,"Item::visible"],[55,2,"Item::onVisibleChange(oldValue)"],[55,2,"Item::clip"],[55,2,"Item::onClipChange(oldValue)"],[55,2,"Item::width"],[55,2,"Item::onWidthChange(oldValue)"],[55,2,"Item::height"],[55,2,"Item::onHeightChange(oldValue)"],[55,2,"Item::x"],[55,2,"Item::onXChange(oldValue)"],[55,2,"Item::y"],[55,2,"Item::onYChange(oldValue)"],[55,2,"Item::z"],[55,2,"Item::onZChange(oldValue)"],[55,2,"Item::scale"],[55,2,"Item::onScaleChange(oldValue)"],[55,2,"Item::rotation"],[55,2,"Item::onRotationChange(oldValue)"],[55,2,"Item::opacity"],[55,2,"Item::onOpacityChange(oldValue)"],[55,2,"Item::linkUri"],[55,2,"Item::onLinkUriChange(oldValue)"],[55,2,"Item::scaleInPoint(scale, pointX, pointY)"],[55,2,"Item::getGlobalComputes()"],[55,2,"Item::anchors"],[55,2,"Item::onAnchorsChange(property, oldValue)"],[55,2,"Item::layout"],[55,2,"Item::onLayoutChange(property, oldValue)"],[55,2,"Item::pointer"],[55,2,"Item::margin"],[55,2,"Item::onMarginChange(property, oldValue)"],[55,2,"Item::keys"],[56,1,"Keys"],[56,2,"Keys.focusedItem"],[56,2,"Class Keys.Event"],[56,2,"Keys::onPress(event)"],[56,2,"Keys::onHold(event)"],[56,2,"Keys::onRelease(event)"],[56,2,"Keys::onInput(event)"],[56,2,"Keys::focus"],[56,2,"Keys::onFocusChange(oldValue)"],[56,2,"Keys.event"],[57,1,"Layout"],[57,2,"Layout::enabled"],[57,2,"Layout::fillWidth"],[57,2,"Layout::onFillWidthChange(oldValue)"],[57,2,"Layout::fillHeight"],[57,2,"Layout::onFillHeightChange(oldValue)"],[58,1,"Margin"],[58,2,"Margin::left"],[58,2,"Margin::onLeftChange(oldValue)"],[58,2,"Margin::top"],[58,2,"Margin::onTopChange(oldValue)"],[58,2,"Margin::right"],[58,2,"Margin::onRightChange(oldValue)"],[58,2,"Margin::bottom"],[58,2,"Margin::onBottomChange(oldValue)"],[58,2,"Margin::horizontal"],[58,2,"Margin::onHorizontalChange(oldValue)"],[58,2,"Margin::vertical"],[58,2,"Margin::onVerticalChange(oldValue)"],[58,2,"Margin::valueOf()"],[59,1,"Native"],[59,2,"Native.New(options)"],[59,2,"Native.defineProperty(config)"],[59,3,"Predefined types"],[59,4,"text"],[59,4,"number"],[59,4,"boolean"],[59,4,"color"],[59,4,"item"],[59,2,"Native::constructor()"],[59,2,"Native::set(propName, val)"],[59,2,"Native::call(funcName, args...)"],[59,2,"Native::on(eventName, listener)"],[60,1,"Navigator"],[60,2,"Navigator.language"],[60,2,"Navigator.browser"],[60,2,"Navigator.native"],[60,2,"Navigator.online"],[60,2,"Navigator.onOnlineChange(oldValue)"],[61,1,"NumberAnimation"],[61,2,"NumberAnimation.New(options)"],[61,2,"NumberAnimation::constructor()"],[61,2,"NumberAnimation::from"],[61,2,"NumberAnimation::to"],[62,1,"ParallelAnimation"],[62,2,"ParallelAnimation.New(options)"],[62,2,"ParallelAnimation::constructor()"],[62,2,"ReadOnly Animation[] ParallelAnimation::children"],[63,1,"Pointer"],[63,2,"Pointer::enabled"],[63,2,"Pointer::onEnabledChange(oldValue)"],[63,2,"Pointer::draggable"],[63,2,"Pointer::onDraggableChange(oldValue)"],[63,2,"Pointer::dragActive"],[63,2,"Pointer::onDragActiveChange(oldValue)"],[63,2,"Pointer::onClick(event)"],[63,2,"Pointer::onPress(event)"],[63,2,"Pointer::onRelease(event)"],[63,2,"Pointer::onEnter(event)"],[63,2,"Pointer::onExit(event)"],[63,2,"Pointer::onWheel(event)"],[63,2,"Pointer::onMove(event)"],[63,2,"Pointer::pressed"],[63,2,"Pointer::onPressedChange(oldValue)"],[63,2,"Pointer::hover"],[63,2,"Pointer::onHoverChange(oldValue)"],[63,2,"Class Pointer.Event"],[63,2,"PointerEvent::itemX"],[63,2,"PointerEvent::itemY"],[63,3,"PointerEvent::stopPropagation"],[63,3,"PointerEvent::checkSiblings"],[63,3,"PointerEvent::ensureRelease"],[63,3,"PointerEvent::ensureMove"],[63,3,"PointerEvent::preventClick"],[63,2,"Pointer.event"],[64,1,"PropertyAnimation"],[64,2,"PropertyAnimation::constructor()"],[64,2,"PropertyAnimation::property"],[64,2,"PropertyAnimation::onPropertyChange(oldValue)"],[64,2,"PropertyAnimation::duration"],[64,2,"PropertyAnimation::onDurationChange(oldValue)"],[64,2,"PropertyAnimation::startDelay"],[64,2,"PropertyAnimation::onStartDelayChange(oldValue)"],[64,2,"PropertyAnimation::loopDelay"],[64,2,"PropertyAnimation::onLoopDelayChange(oldValue)"],[64,2,"PropertyAnimation::delay"],[64,2,"PropertyAnimation::onDelayChange(oldValue)"],[64,2,"Integer PropertyAnimation::updateProperty = PropertyAnimation.ON_START | PropertyAnimation.ON_STOP"],[64,2,"PropertyAnimation::onUpdatePropertyChange(oldValue)"],[64,2,"PropertyAnimation::from"],[64,2,"PropertyAnimation::onFromChange(oldValue)"],[64,2,"PropertyAnimation::to"],[64,2,"PropertyAnimation::onToChange(oldValue)"],[64,2,"PropertyAnimation::progress"],[64,2,"PropertyAnimation::updatePending"],[64,2,"PropertyAnimation::easing"],[64,2,"PropertyAnimation::onEasingChange(value)"],[65,1,"Rectangle"],[65,2,"Rectangle.New(options)"],[65,2,"Rectangle::constructor()"],[65,2,"Rectangle::color"],[65,2,"Rectangle::onColorChange(oldValue)"],[65,2,"Rectangle::radius"],[65,2,"Rectangle::onRadiusChange(oldValue)"],[65,2,"Rectangle::border"],[65,2,"Rectangle::onBorderChange(property, oldValue)"],[65,2,"Rectangle::border.width"],[65,2,"Rectangle::border.onWidthChange(oldValue)"],[65,2,"Rectangle::border.color"],[65,2,"Rectangle::border.onColorChange(oldValue)"],[66,1,"ResourcesLoader"],[66,2,"ResourcesLoader.New(options)"],[66,2,"ResourcesLoader::resources"],[66,2,"ResourcesLoader::progress"],[66,2,"ResourcesLoaded::onProgressChange(oldValue)"],[67,1,"Row"],[67,2,"Row.New(options)"],[67,2,"Row::constructor()"],[67,2,"Row::padding"],[67,2,"Row::onPaddingChange(padding)"],[67,2,"Row::spacing"],[67,2,"Row::onSpacingChange(oldValue)"],[67,2,"Row::alignment"],[67,2,"Row::onAlignmentChange(oldValue)"],[67,2,"Row::includeBorderMargins"],[67,2,"Row::onIncludeBorderMarginsChange(oldValue)"],[68,1,"Screen"],[68,2,"Screen.touch"],[68,2,"Screen.width"],[68,2,"Screen.height"],[68,2,"Screen.orientation"],[68,2,"Screen.onOrientationChange(oldValue)"],[68,2,"Screen.statusBar"],[69,1,"SequentialAnimation"],[69,2,"SequentialAnimation.New(options)"],[69,2,"SequentialAnimation::constructor()"],[69,2,"ReadOnly Animation[] SequentialAnimation::children"],[70,1,"Spacing"],[70,2,"Spacing::column"],[70,2,"Spacing::onColumnChange(oldValue)"],[70,2,"Spacing::row"],[70,2,"Spacing::onRowChange(oldValue)"],[70,2,"Spacing::valueOf()"],[71,1,"StatusBar"],[71,2,"StatusBar.height"],[71,2,"StatusBar.color"],[71,2,"StatusBar.onColorChange(oldValue)"],[72,1,"Text"],[72,2,"Text.New(options)"],[72,2,"Text::constructor()"],[72,2,"Text::width"],[72,2,"Text::height"],[72,2,"Text::text"],[72,2,"Text::onTextChange(oldValue)"],[72,2,"Text::color"],[72,2,"Text::onColorChange(oldValue)"],[72,2,"Text::linkColor"],[72,2,"Text::onLinkColorChange(oldValue)"],[72,2,"Text::lineHeight"],[72,2,"Text::onLineHeightChange(oldValue)"],[72,2,"Text::contentWidth"],[72,2,"Text::onContentWidthChange(oldValue)"],[72,2,"Text::contentHeight"],[72,2,"Text::onContentHeightChange(oldValue)"],[72,2,"Text::alignment"],[72,2,"Text::onAlignmentChange(property, oldValue)"],[72,2,"Text::font"],[72,2,"Text::onFontChange(property, oldValue)"],[73,1,"Transition"],[73,2,"Transition.New(options)"],[73,2,"Transition::constructor()"],[73,2,"Transition::animation"],[73,2,"Transition::onAnimationChange(oldValue)"],[73,2,"Transition::property"],[73,2,"Transition::onPropertyChange(oldValue)"],[74,1,"Renderer"],[75,1,"Resource"],[75,2,"Resource.fromJSON(json)"],[75,2,"Resource.parseFileName(path)"],[75,2,"Resource::file"],[75,2,"Resource::name"],[75,2,"Resource::color"],[75,2,"Resource::width"],[75,2,"Resource::height"],[75,2,"Resource::formats"],[75,2,"Resource::resolutions"],[75,2,"Resource::paths"],[75,2,"Resource::resolve(uri, request)"],[75,2,"Resource::toJSON()"],[76,1,"Resources"],[76,2,"Resources.fromJSON(json)"],[76,2,"Resources.testUri(uri)"],[76,2,"Resources::getResource(uri)"],[76,2,"Resources::resolve(uri, request)"],[76,2,"Resources::toJSON()"],[77,1,"Array Validator"],[78,1,"Max Validator"],[79,1,"Min Validator"],[80,1,"Object Validator"],[81,1,"Optional Validator"],[82,1,"Options Validator"],[83,1,"RegExp Validator"],[84,1,"Type Validator"],[85,1,"Schema"],[85,2,"Class SchemaError()"],[85,2,"Schema::constructor(schema)"],[85,2,"Schema::schema"],[85,2,"Schema::validate(data)"],[85,3,"Nested properties"],[86,1,"Signal"],[86,2,"signal.STOP_PROPAGATION"],[86,2,"signal.create(object, name)"],[86,2,"signal.isEmpty(signal)"],[86,2,"Signal::emit(argument1, argument2)"],[86,2,"Signal::connect(listener, context)"],[86,2,"Signal::connectOnce(listener, context)"],[86,2,"Signal::disconnect(listener, context)"],[86,2,"Signal::disconnectAll()"],[87,1,"Struct"],[87,2,"Struct::constructor(object)"],[88,1,"Typed Array"],[88,2,"Class Int8(length)"],[88,2,"Class Uint8(length)"],[88,2,"Class Int16(length)"],[88,2,"Class Uint16(length)"],[88,2,"Class Int32(length)"],[88,2,"Class Uint32(length)"],[88,2,"Class Float32(length)"],[88,2,"Class Float64(length)"],[89,1,"Asynchronous"],[89,2,"utils.async.forEach(array, callback, onEnd, context)"],[89,2,"Class Stack()"],[89,3,"Stack::add(function, context, arguments)"],[89,3,"Stack::callNext(arguments, callback)"],[89,3,"Stack::runAll(callback, callbackContext)"],[89,3,"Stack::runAllSimultaneously(callback, callbackContext)"],[90,1,"Properties extraction"],[90,2,"utils.get(object, path, target)"],[90,2,"Class utils.get.OptionsArray()"],[90,2,"utils.isStringArray(value)"],[91,1,"Stringifying"],[91,2,"utils.simplify(object, options)"],[91,2,"utils.assemble(object)"],[92,1,"Utils"],[92,2,"utils.NOP"],[92,2,"utils.is(value1, value2)"],[92,2,"utils.isFloat(value)"],[92,2,"utils.isInteger(value)"],[92,2,"utils.isPrimitive(value)"],[92,2,"utils.isObject(value)"],[92,2,"utils.isPlainObject(value)"],[92,2,"utils.isArguments(value)"],[92,2,"utils.merge(source, object)"],[92,2,"utils.mergeAll(source, objects...)"],[92,2,"utils.mergeDeep(source, object)"],[92,2,"utils.mergeDeepAll(source, objects...)"],[92,2,"utils.fill(source, object)"],[92,2,"utils.remove(object, element)"],[92,2,"utils.removeFromUnorderedArray(array, element)"],[92,2,"utils.getPropertyDescriptor(object, property)"],[92,2,"utils.lookupGetter(object, property)"],[92,2,"utils.lookupSetter(object, property)"],[92,2,"utils.defineProperty(object, property, descriptors, value, setter)"],[92,2,"utils.overrideProperty(object, property, value, setter)"],[92,2,"utils.clone(param)"],[92,2,"utils.cloneDeep(param)"],[92,2,"utils.isEmpty(object)"],[92,2,"utils.last(array)"],[92,2,"utils.clear(object)"],[92,2,"utils.setPrototypeOf(object, prototype)"],[92,2,"utils.has(object, value)"],[92,2,"utils.objectToArray(object, valueGen, target)"],[92,2,"utils.arrayToObject(array, keyGen, valueGen, target)"],[92,2,"utils.capitalize(string)"],[92,2,"utils.addSlashes(string)"],[92,2,"utils.uid(length)"],[92,2,"utils.tryFunction(function, context, arguments, onFail)"],[92,2,"utils.catchError(function, context, arguments)"],[92,2,"utils.bindFunctionContext(function, context)"],[92,2,"utils.errorToObject(error)"],[92,2,"utils.getOwnProperties(object)"],[92,2,"utils.deprecate(function, message)"],[92,2,"utils.isEqual(object1, object2, compareFunction, maxDeep)"],[92,2,"utils.snakeToCamel(value)"],[92,2,"utils.kebabToCamel(value)"],[92,2,"utils.camelToKebab(value)"]]}