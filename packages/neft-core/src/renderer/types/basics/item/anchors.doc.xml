<meta
  name="Item.Anchors"
  category="Style"
/>

Anchors describe position relations between two items.

Each item has few lines: top, bottom, verticalCenter, left, right, horizontalCenter.

Anchors give a posibility to say, that a line of the first item must be
always in the same position as a line of the second item.

Anchors work only between siblings and in relation to the direct parent.

```javascript
Item {
    height: 100
    Rectangle {
        id: rect1
        width: 100
        height: 100
        color: 'green'
    }
    Rectangle {
        width: 40
        height: 40
        color: 'red'
        anchors.left: rect1.right
    }
}
```

```javascript
Rectangle {
    width: 100
    height: 100
    color: 'green'
    Rectangle {
        width: 40
        height: 40
        color: 'red'
        anchors.left: parent.right
    }
}
```

Horizontal anchors can't point to the vertical lines (and vice versa),
so `anchors.top = parent.left` is not allowed.

<property name=left type=object />

<property name=right type=object />

<property name=horizontalCenter type=object />

```svg
<svg viewBox="0 0 1 1">
    <rect x="0.2" y="0.2" width="0.6" height="0.6" fill="lightgray" />
    <line x1="0.5" y1="0" x2="0.5" y2="1" stroke="black" stroke-width="0.01" />
</svg>
```

```javascript
Item {
    height: 100
    Rectangle { id: rect1; color: 'green'; width: 100; height: 100; }
    Rectangle {
        color: 'red'; width: 40; height: 40
        anchors.horizontalCenter: rect1.horizontalCenter
    }
}
```

<property name=top type=object />

```svg
<svg viewBox="0 0 1 1">
    <rect x="0.2" y="0.2" width="0.6" height="0.6" fill="lightgray" />
    <line x1="0" y1="0.2" x2="1" y2="0.2" stroke="black" stroke-width="0.01" />
</svg>
```

```javascript
Item {
    height: 100
    Rectangle { id: rect1; color: 'green'; width: 100; height: 100; }
    Rectangle {
        color: 'red'; width: 40; height: 40
        anchors.top: rect1.verticalCenter
    }
}
```

<property name=bottom type=object />

```svg
<svg viewBox="0 0 1 1">
    <rect x="0.2" y="0.2" width="0.6" height="0.6" fill="lightgray" />
    <line x1="0" y1="0.8" x2="1" y2="0.8" stroke="black" stroke-width="0.01" />
</svg>
```

<property name=verticalCenter type=object />

```svg
<svg viewBox="0 0 1 1">
    <rect x="0.2" y="0.2" width="0.6" height="0.6" fill="lightgray" />
    <line x1="0" y1="0.5" x2="1" y2="0.5" stroke="black" stroke-width="0.01" />
</svg>
```

```javascript
Item {
    height: 100
    Rectangle { id: rect1; color: 'green'; width: 100; height: 100; }
    Rectangle {
        color: 'red'; width: 40; height: 40
        anchors.verticalCenter: rect1.verticalCenter
    }
}
```

<property name=centerIn type=object />

It's a shortcut for the horizontalCenter and verticalCenter anchors.

No target line is required.

```javascript
Rectangle {
    id: rect1
    width: 100
    height: 100
    color: 'green'
    Rectangle {
        width: 40
        height: 40
        color: 'red'
        anchors.centerIn: parent
    }
}
```

<property name=fill type=object />

Changes item position and its size to be always equal the anchored target.

No target line is required.

```javascript
Item {
    height: 100
    Rectangle { id: rect1; color: 'green'; width: 100; height: 100; }
    Rectangle {
        color: 'red'
        opacity: 0.5
        anchors.fill: rect1
    }
}
```
